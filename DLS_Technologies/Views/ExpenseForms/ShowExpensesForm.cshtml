@model DLS_Technologies.ViewModels.ExpenseFormViewModel
@{  
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>
<hr />
@Html.ActionLink("Back", "Index", "ExpenseForms")
<br /><br />
@Html.ActionLink("Add New Expense", "NewExpense", "Expenses", new { expenseFormId = Model.ExpenseForm.Id }, null )
<br /><br />
@{
    if (!Model.Expenses.Any())
    {
        <h4>No expenses have been added to this form.</h4>
    }
    else
    {
        @Html.HiddenFor(m => m.ExpenseForm.Id)
        @Html.HiddenFor(m => m.TotalCost)

        <table id="expensesTable" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Expense Type</th>
                    <th>Date</th>
                    <th>DateTime</th>
                    <th>Origin</th>
                    <th>Destion</th>
                    <th>Total Miles</th>
                    <th>Cost</th>  
                </tr>
            </thead>
            <tbody>
                @{ 
                    foreach (var expense in Model.Expenses)
                    {
                        
                        <tr data-expenseform-id="@expense.ExpenseFormId" data-expense-id="@expense.Id">
                            <td>@expense.ExpenseType.Name</td>
                            <td>@expense.Date.Value.ToShortDateString()</td>
                            <td>@expense.DateTime</td>
                            <th>@expense.Origin</th>
                            <th>@expense.Destination</th>
                            <td>@expense.TotalMiles</td>
                            <td>£@expense.Cost.Value.ToString("0.00")</td>
                        </tr>
                        
                    }
                }
            </tbody>
            
        </table>
    }
}

@section scripts 
{
    <script>

        $(document).ready(function () {
            
            $("#expensesTable").append('<tfoot><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tfoot>');
            $('#expensesTable').DataTable({
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                order: [[2, "desc"]],
                columnDefs: [
                    { width: 100, targets: [5, 6] },
                    {
                        'targets': [2],
                        'visible': false,
                        'searchable': false
                    }
                ],
                dom: 'Blfrtip',
                buttons: [
                    {
                        extend: 'copyHtml5',
                        footer: true,
                        exportOptions: {
                            order: [[2, "asc"]],
                            columns: [0, 1, 3, 4, 5, 6]
                        }
                    },
                    { 
                        extend: 'excelHtml5',
                        footer: true,
                        exportOptions: {
                            columns: [0, 1, 3, 4, 5, 6]
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        footer: true,
                        exportOptions: {
                            columns: [0, 1, 3, 4, 5, 6]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        footer: true,
                        exportOptions: {
                            order: [[2, "asc"]],
                            columns: [0, 1, 3, 4, 5, 6]
                        }
                    }
                ],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\£,]/g, '') * 1 :
                            typeof i === 'number' ? i : 0;
                    };

                    // Total over all pages
                    totalCost = api
                        .column(6)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                    // Total over this page
                    pageTotal = api
                        .column(6, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);


                    var totalCostResult = parseFloat(Math.round(totalCost * 100) / 100).toFixed(2); 


                    // Total over all pages
                    totalMiles = api
                        .column(5)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                    // Total over this page
                    pageTotal = api
                        .column(5, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                    

                    // Update footer
                    $(api.column(6).footer()).html(
                        'Total: £' + totalCostResult
                    );

                    // Update footer
                    $(api.column(5).footer()).html(
                        'Total Miles: ' + totalMiles
                    );                    
                }
            });       
            
            $("#expensesTable tbody").on("click", "tr", function () {
                var row = $(this);
                $.ajax({
                    method: "GET",                    
                    url: "/Expenses/GetExpense/" + row.attr("data-expense-id"),
                    success: function () {
                        window.location.href = '/Expenses/GetExpense/' + row.attr("data-expense-id")
                    }
                });                
            });
        })
    </script>
}