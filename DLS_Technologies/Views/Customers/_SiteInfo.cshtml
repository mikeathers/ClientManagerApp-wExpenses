@model DLS_Technologies.ViewModels.CustomerViewModels.SiteInfoViewModel
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()

    <input type="hidden" id="Id" name="Id" value="@Model.Id">
    @Html.HiddenFor(m => m.CustomerId)
    @Html.HiddenFor(m => m.NoteId)



    <div class="row">
        <div class="col-sm-8">
            <row>
                <ul class="nav nav-tabs" id="siteinfo-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="network-tab" data-tab-id="1" data-toggle="tab" href="#network-info" role="tab" aria-controls="network-info" aria-expanded="true">Network Details</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="wifi-tab" data-tab-id="2" data-toggle="tab" href="#wifi-info" role="tab" aria-controls="wifi-info">Wifi Details</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" id="domain-tab" data-tab-id="3" data-toggle="tab" href="#domain-info" role="tab" aria-controls="domain-info">Domain Details</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="other-tab" data-tab-id="3" data-toggle="tab" href="#other-info" role="tab" aria-controls="other-info">Other Details</a>
                    </li>
                </ul>
                <div class="tab-content" id="siteinfo-tab-content">

                    <div class="tab-pane fade fade in active" id="network-info" role="tabpanel" aria-labelledby="network-tab">
                        <div class="form-group">
                            <div data-note-type="NetworkInfo" id="cust-note-edit">
                                @Html.TextAreaFor(m => m.NetworkInfo, new { @class = "form-control siteinfo-tab-notes", @placeholder = "Click Edit to add a note...", @readonly = true, @spellcheck = false })
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="wifi-info" role="tabpanel" aria-labelledby="wifi-tab">
                        <div class="form-group">
                            <div data-note-type="WifiInfo" id="cust-note-edit">
                                @Html.TextAreaFor(m => m.WifiInfo, new { @class = "form-control siteinfo-tab-notes", @placeholder = "Click Edit to add a note...", @readonly = true, @spellcheck = false })
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="domain-info" role="tabpanel" aria-labelledby="domain-tab">
                        <div class="form-group">
                            <div data-note-type="DomainInfo" id="cust-note-edit">
                                @Html.TextAreaFor(m => m.DomainInfo, new { @class = "form-control siteinfo-tab-notes", @placeholder = "Click Edit to add a note...", @readonly = true, @spellcheck = false })
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="other-info" role="tabpanel" aria-labelledby="other-tab">
                        <div class="form-group">
                            <div data-note-type="OtherInfo" id="cust-note-edit">
                                @Html.TextAreaFor(m => m.DomainInfo, new { @class = "form-control siteinfo-tab-notes", @placeholder = "Click Edit to add a note...", @readonly = true, @spellcheck = false })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="siteinfo-btns">
                    <button id="edit-tab-btn" class="btn btn-link">Edit</button>
                    <button id="save-tab-btn" data-customer-id="@Model.CustomerId" class="btn btn-link">Save</button>
                </div>
            </row>
            <row>
                <div class="form-group siteinfo-notes-div">
                    @Html.LabelFor(m => m.NoteTitle)
                    @Html.TextBoxFor(m => m.NoteTitle, new { @class = "form-control", @placeholder = "Enter new title...", @readonly = true })
                    <br />
                    @Html.LabelFor(m => m.NoteContent)
                    @Html.TextAreaFor(m => m.NoteContent, new { @class = "form-control siteinfo-notes", @placeholder = "Enter new note then press Save...", @readonly = true })
                    <div id="note-warning" hidden="hidden" class="note-validation-failed"></div>
                    <div class="">                        
                        <div class="siteinfo-delete-note-btn">
                            <button id="delete-note-btn" data-customer-id="@Model.CustomerId" class="btn btn-link">Delete</button>
                            <button id="addnew-note-btn" data-customer-id="@Model.CustomerId" class="btn btn-link">Add New</button>
                        </div>
                        <div class="siteinfo-note-btns">
                            <button id="edit-note-btn" class="btn btn-link">Edit</button>
                            <button id="save-note-btn" data-customer-id="@Model.CustomerId" class="btn btn-link">Save</button>
                        </div>
                    </div>
                </div>
            </row>
        </div>
        <div class="col-sm-2 siteinfo-table-col">
            <h4>Site Notes:</h4>

            <div id="SiteInfoNotesTable"></div>
        </div>
    </div>
    
}


<script>

    var token = $('input[name="__RequestVerificationToken"]').val();
    $.ajaxPrefilter(function (options, originalOptions) {
        if (options.type.toUpperCase() == "PUT") {
            options.data = $.param($.extend(originalOptions.data, { __RequestVerificationToken: token }));
        }
    });

    function LoadSiteInfoNotesTable() {
        var custId = $("#CustomerId").val();
        var noteId = $("#NoteId").val(); 

        $.ajax({
            method: "GET",
            url: "/Customers/LoadSiteInfoNotesTable/",
            data: {
                id: custId,
                noteId: noteId
            },
        }).done(function (result) {
            $("#SiteInfoNotesTable").empty();
            $("#SiteInfoNotesTable").html(result);
        });
    }

    $(document).ready(function () {

        LoadSiteInfoNotesTable();

        $("#network-tab").parent().addClass("active");

        $("#edit-tab-btn").on("click", function (e) {
            e.preventDefault();
            $(this).parent().prev().find(".active").find("textarea").removeAttr("readonly").focus();
        });

        $("#save-tab-btn").on("click", function (e) {
            e.preventDefault();
            $(".nav-tabs").next().find("textarea").attr("readonly", "true");
            var note = $(this).parent().prev().find(".active").find("textarea").val();
            var noteType = $(this).parent().prev().find(".active").find("textarea").parent().attr("data-note-type");
            var custId = $(this).attr("data-customer-id");

            $.ajax({
                method: "PUT",
                url: "/Customers/SaveSiteInfoTabNote/",
                data: {
                    note: note,
                    noteType: noteType,
                    id: custId
                }
            })
        });

        $(".nav-tabs").on("click", function () {
            $(this).next().find("textarea").attr("readonly", "true");
        });

        $("#save-note-btn").on("click", function (e) {
            e.preventDefault();

            var title = $("#NoteTitle").val();
            var content = $("#NoteContent").val();
            var custId = $(this).attr("data-customer-id");
            var noteId = $("#NoteId").val();

            if (title == "" || content == "") {
                console.log("hellow");
                $("#note-warning").html("Title and Content must be filled out before you can save a note.").show();
            } else {
                $.ajax({
                    method: "PUT",
                    url: "/Customers/SaveSiteInfoNote/",
                    data: {
                        id: custId,
                        noteId: noteId,
                        noteTitle: title,
                        noteContent: content
                    },
                    success: function (result) {
                        $("#note-warning").hide();
                        $("#NoteId").val(result);
                        $("#NoteTitle").attr("readonly", "true");
                        $("#NoteContent").attr("readonly", "true");
                        LoadSiteInfoNotesTable();
                    }
                })
            }
            

            
        });

        $("#addnew-note-btn").on("click", function (e) {
            e.preventDefault();
            $("#NoteTitle").val("").removeAttr("readonly");
            $("#NoteContent").val("").removeAttr("readonly");
            $("#NoteId").val(0);
            $("#NoteTitle").focus();
        });

        $("#edit-note-btn").on("click", function (e) {
            e.preventDefault();
            $("#NoteTitle").removeAttr("readonly");
            $("#NoteContent").removeAttr("readonly");
            $("#NoteContent").focus();
        });

        $("#delete-note-btn").on("click", function (e) {
            e.preventDefault();
            var id = $("#NoteId").val();
            bootbox.confirm("Are you sure you want to delete this note?", (result) => {
                if (result) {
                    $.ajax({
                        method: "DELETE",
                        url: "/Api/Customers/DeleteNote/" + id,
                        
                        success: function () {
                            $("#NoteId").val(0);
                            LoadSiteInfoNotesTable();
                        }
                    });
                }
            })
        })
    })



</script>

