@model DLS_Technologies.ViewModels.CustomerViewModels.CustomerViewModel
@{
    ViewBag.Title = "New Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>
<hr />
@Html.ActionLink("Back", "Index", "Customers", new { }, null)
<br /><br />

    @using (Html.BeginForm("Save", "Customers"))
    {
        @Html.ValidationSummary()
        @Html.AntiForgeryToken()
        <input type="hidden" id="Id" name="Id" value="@Model.Id">

        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
            </div>            
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.AccountTypeId)
                @Html.DropDownListFor(m => m.AccountTypeId, new SelectList(Model.AccountTypes, "Id", "Name", "1"), "Select Account Type", new { @class = "form-control", @onChange = "siteVisitCheck()" })
            </div>
            <div class="col-lg-offset-4"></div>
        </div>
        <div class="row">            
            <div class="form-group col-sm-4 site-visit-form" hidden="hidden">
                @Html.LabelFor(m => m.MonthlySiteVisitDate)
                @Html.TextBoxFor(m => m.MonthlySiteVisitDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
            <div class="col-sm-offset-8"></div>
        </div>

        <div class="row" >
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.ContactOnSite )
                @Html.TextBoxFor(m => m.ContactOnSite, new { @class = "form-control", @placeholder ="Contact Name"})
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.EmailAddress)
                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @placeholder = "Contact Email" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.Address)
                @Html.TextAreaFor(m => m.Address, new { @class="form-control", @placeholder = "Address Details"})
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.ContactInfo)
                @Html.TextAreaFor(m => m.ContactInfo, new { @class = "form-control", @placeholder = "Contact Information" })
            </div>
            <div class="col-sm-offset-4"></div>
        </div>

        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.PostCode)
                @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control", placeholder = "Post Code" })
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.DateJoined)
                @Html.TextBoxFor(m => m.DateJoined, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            </div>
            <div class="col-sm-offset-4"></div>
        </div>

        <div class="row">
            <div class="form-group col-lg-8">
                @Html.LabelFor(m => m.Note)
                @Html.TextAreaFor(m => m.Note, new { @class = "form-control new-cust-note", @placeholder = "Initial Notes..." })
            </div>
            <div class="col-lg-offset-4"></div>
        </div>

        <br />

        if (Model.Id != 0)
        {
            <button class="btn btn-success">Save Customer</button>
        }
        else
        {
            <button class="btn btn-success">Add Customer</button>
        }

    }

@section scripts {

@Scripts.Render("~/scripts/formscripts/customers/customer-form.js")



}